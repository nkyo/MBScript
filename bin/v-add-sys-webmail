#!/bin/bash
# info: add webmail support for a domain
# options: USER DOMAIN [RESTART] [QUIET]
# labels: hestia
#
# example: v-add-sys-webmail user domain.com
#
# this function adds support for webmail services
# to a mail domain.

#----------------------------------------------------------#
#                    Variable&Function                     #
#----------------------------------------------------------#

# Argument definition
user=$1
domain=$2
restart="$3"
quiet=$4

# Additional argument formatting
if [[ "$domain" =~ [[:upper:]] ]]; then
    domain=$(echo "$domain" |tr '[:upper:]' '[:lower:]')
fi
if [[ "$domain" =~ ^www\..* ]]; then
    domain=$(echo "$domain" |sed -e "s/^www.//")
fi
if [[ "$domain" =~ .*\.$ ]]; then
    domain=$(echo "$domain" |sed -e "s/\.$//")
fi

domain_idn=$(idn -t --quiet -a "$domain")

# Includes
source $HESTIA/func/main.sh
source $HESTIA/func/domain.sh
source $HESTIA/func/ip.sh
source $HESTIA/conf/hestia.conf

# Additional argument formatting
format_domain
format_domain_idn


#----------------------------------------------------------#
#                    Verifications                         #
#----------------------------------------------------------#

check_args '2' "$#" 'USER DOMAIN [RESTART]'
is_format_valid 'user' 'domain'
is_system_enabled "$WEB_SYSTEM" 'WEB_SYSTEM'
is_system_enabled "$IMAP_SYSTEM" 'IMAP_SYSTEM'
is_object_valid 'user' 'USER' "$user"
is_object_unsuspended 'user' 'USER' "$user"
is_object_valid 'mail' 'DOMAIN' "$domain"
is_object_unsuspended 'mail' 'DOMAIN' "$domain"

#----------------------------------------------------------#
#                       Action                             #
#----------------------------------------------------------#

# Inherit web domain local ip address
domain_ip=$(get_object_value 'web' 'DOMAIN' "$domain" '$IP')
if [ ! -z "$domain_ip" ]; then
    local_ip=$(get_real_ip "$domain_ip")
    is_ip_valid "$local_ip" "$user"

    ip=$local_ip
    nat_ip=$(get_ip_value '$NAT')
    if [ ! -z "$nat_ip" ]; then
        ip=$nat_ip
    fi
else
    get_user_ip
fi

# Verify that webmail alias variable exists and create it if it does not
if [ -z "$WEBMAIL_ALIAS" ]; then
    $BIN/v-change-sys-config-value 'WEBMAIL_ALIAS' "webmail"
else
    # Ensure DNS record exists if Hestia is hosting DNS zones
    if [ ! -z "$DNS_SYSTEM" ]; then
        dns_domain=$($BIN/v-list-dns-domains $user | grep $domain | cut -d' ' -f1)
        webmail_record=$($BIN/v-list-dns-records $user $domain | grep -i $WEBMAIL_ALIAS | cut -d' ' -f1)

        if [ "$dns_domain" = "$domain" ]; then
            if [ -z "$webmail_record" ]; then
                $BIN/v-add-dns-record $user $domain $WEBMAIL_ALIAS A $ip
            else
                $BIN/v-delete-dns-record $user $domain $webmail_record
                $BIN/v-add-dns-record $user $domain $WEBMAIL_ALIAS A $ip
            fi
        fi
    fi

    # Add webmail configuration to mail domain
    WEBMAIL_TEMPLATE="default"
    if [ "$WEB_SYSTEM" = "nginx" ]; then
        WEBMAIL_TEMPLATE="web_system"
    fi
    add_webmail_config "$WEB_SYSTEM" "${WEBMAIL_TEMPLATE}.tpl"

    if [ ! -z "$PROXY_SYSTEM" ]; then
        add_webmail_config "$PROXY_SYSTEM" "default.tpl"
    fi

    # Enable SSL for webmail if available
    if [ -f $HOMEDIR/$user/conf/mail/$domain/ssl/$domain.crt ] || [ "$SSL" = 'yes' ]; then
        add_webmail_config "$WEB_SYSTEM" "${WEBMAIL_TEMPLATE}.stpl"

        if [ ! -z "$PROXY_SYSTEM" ]; then
            add_webmail_config "$PROXY_SYSTEM" "default.stpl"
        fi
    fi
fi

#----------------------------------------------------------#
#                       Hestia                             #
#----------------------------------------------------------#

if [ "$3" = 'yes' ]; then 
    # Restarting web server
    $BIN/v-restart-web $restart
    check_result $? "Web restart failed" >/dev/null

    $BIN/v-restart-proxy $restart
    check_result $? "Proxy restart failed" >/dev/null
fi

# Logging
if [ "$quiet" != 'yes' ]; then
    log_history "enabled webmail support for $domain"
fi
log_event "$OK" "$ARGUMENTS"

exit