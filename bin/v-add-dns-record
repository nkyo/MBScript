#!/bin/bash
# info: add dns record
# options: USER DOMAIN RECORD TYPE VALUE [PRIORITY] [ID] [RESTART] [TTL]
# labels: dns
#
# example: v-add-dns-record admin acme.com www A 162.227.73.112
#
# The call is used for adding new DNS record. Complex records of TXT, MX and
# SRV types can be used by a filling in the 'value' argument. The function also
# gets an id parameter for definition of certain record identifier or for the
# regulation of records.


#----------------------------------------------------------#
#                    Variable&Function                     #
#----------------------------------------------------------#

# Argument definition
user=$1
domain=$2
domain_idn=$2
record=$(idn -t --quiet -u "$3" )
record=$(echo "$record" | tr '[:upper:]' '[:lower:]')
rtype=$(echo "$4"| tr '[:lower:]' '[:upper:]')
dvalue=$(idn -t --quiet -u "$5" )
priority=$6
id=$7
restart=$8
ttl=$9

if [ -z "$priority" ]; then
    priority=10
fi

# Includes
source $HESTIA/func/main.sh
source $HESTIA/func/domain.sh
source $HESTIA/conf/hestia.conf

# Null priority for none MX/SRV records
if [ "$rtype" != 'MX' ] && [ "$rtype" != 'SRV' ]; then
    priority=''
fi

# Add trailing dot at the end of NS/CNAME/MX/PTR/SRV record
if [[ $rtype =~ NS|CNAME|MX|PTR|SRV ]]; then
    trailing_dot=$(echo $dvalue | grep "\.$")
    if [ -z "$trailing_dot" ]; then
        dvalue="$dvalue."
    fi
fi

# Cleanup quotes on dvalue
# - [CAA] records will be left unchanged
# - [SRV] will be  stripped of double quotes even when  containg spaces
# - Rest of record types will be striped of quotes and the final string
#   will be enclosed in double quotes if  containg spaces or semicolons 

if [ "$rtype" != "CAA" ]; then
    dvalue=${dvalue//\"/}

    if [ "$rtype" != 'SRV' ] && [[ "$dvalue" =~ [\;[:space:]] ]]; then
        dvalue='"'"$dvalue"'"'
    fi
fi

# Additional argument formatting
format_domain
format_domain_idn
# TODO: $domain_idn not used in this script - maybe $domain should be converted to $doman_idn ?


#----------------------------------------------------------#
#                    Verifications                         #
#----------------------------------------------------------#

check_args '5' "$#" 'USER DOMAIN RECORD TYPE VALUE [PRIORITY] [ID] [RESTART] [TTL]'
is_format_valid 'user' 'domain' 'record' 'rtype' 'dvalue'
is_system_enabled "$DNS_SYSTEM" 'DNS_SYSTEM'
is_object_valid 'user' 'USER' "$user"
is_object_unsuspended 'user' 'USER' "$user"
is_object_valid 'dns' 'DOMAIN' "$domain"
is_object_unsuspended 'dns' 'DOMAIN' "$domain"
is_package_full 'DNS_RECORDS'
get_next_dnsrecord
is_format_valid 'id'
is_object_new "dns/$domain" 'ID' "$id"
is_dns_fqnd "$rtype" "$dvalue"
is_dns_nameserver_valid "$domain" "$rtype" "$dvalue"
is_format_valid 'ttl'

# Perform verification if read-only mode is enabled
check_hestia_demo_mode


#----------------------------------------------------------#
#                       Action                             #
#----------------------------------------------------------#

# Generating timestamp
time_n_date=$(date +'%T %F')
time=$(echo "$time_n_date" |cut -f 1 -d \ )
date=$(echo "$time_n_date" |cut -f 2 -d \ )

# Adding record
zone="$USER_DATA/dns/$domain.conf"
dns_rec="ID='$id' RECORD='$record' TYPE='$rtype' PRIORITY='$priority'"
dns_rec="$dns_rec VALUE='$dvalue' SUSPENDED='no' TIME='$time' DATE='$date'"
[ ! -z "$ttl" ] && dns_rec="$dns_rec TTL='$ttl'"
echo "$dns_rec" >> $zone;
chmod 660 $zone

# Sorting records
sort_dns_records

# Updating zone
if [[ "$DNS_SYSTEM" =~ named|bind ]]; then
    update_domain_serial
    update_domain_zone
fi

# Updating dns-cluster queue
if [ ! -z "$DNS_CLUSTER" ]; then
    # Check for first sync
    dlock=$(grep "domain $user $domain" $HESTIA/data/queue/dns-cluster.pipe)
    if [ -z "$dlock" ]; then
        cmd="$BIN/v-add-remote-dns-record $user $domain $id"
        echo "$cmd" >> $HESTIA/data/queue/dns-cluster.pipe
    fi
fi


#----------------------------------------------------------#
#                       Hestia                             #
#----------------------------------------------------------#

# Update counters
records="$(wc -l $USER_DATA/dns/$domain.conf | cut -f1 -d ' ')"
update_object_value 'dns' 'DOMAIN' "$domain" '$RECORDS' "$records"
increase_user_value "$user" '$U_DNS_RECORDS'

# Restart named
$BIN/v-restart-dns $restart
check_result $? $E_RESTART 'dns failed to restart'

# Logging
log_history "added $rtype dns record $record for $domain"
log_event "$OK" "$ARGUMENTS"

exit
